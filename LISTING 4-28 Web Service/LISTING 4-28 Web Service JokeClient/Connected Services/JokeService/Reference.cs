//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JokeClient.JokeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JokeService.IJokeOfTheDayService")]
    public interface IJokeOfTheDayService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJokeOfTheDayService/GetJoke", ReplyAction="http://tempuri.org/IJokeOfTheDayService/GetJokeResponse")]
        string GetJoke(int jokeStrength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJokeOfTheDayService/GetJoke", ReplyAction="http://tempuri.org/IJokeOfTheDayService/GetJokeResponse")]
        System.Threading.Tasks.Task<string> GetJokeAsync(int jokeStrength);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJokeOfTheDayServiceChannel : JokeClient.JokeService.IJokeOfTheDayService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JokeOfTheDayServiceClient : System.ServiceModel.ClientBase<JokeClient.JokeService.IJokeOfTheDayService>, JokeClient.JokeService.IJokeOfTheDayService {
        
        public JokeOfTheDayServiceClient() {
        }
        
        public JokeOfTheDayServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JokeOfTheDayServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JokeOfTheDayServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JokeOfTheDayServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetJoke(int jokeStrength) {
            return base.Channel.GetJoke(jokeStrength);
        }
        
        public System.Threading.Tasks.Task<string> GetJokeAsync(int jokeStrength) {
            return base.Channel.GetJokeAsync(jokeStrength);
        }
    }
}
