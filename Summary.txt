LISTING 1:
Action
Parallel.Invoke
Parallel.ForEach
Parallel.For
ParallelLoopState (Break vs Stop)
ParallelLoopResult
AsParallel
WithExecutionMode (ParallelExecutionMode)
WithDegreeOfParallelism
AsOrdered
AsSequential
ForAll
AggregateException
Task (Start, Run, Wait)
Task<T>
TaskFactory (StartNew)
TaskCreationOptions
TaskContinuationOptions
CancellationTokenSource
CancellationToken
WaitAll
WaitAny
WhenAll
ContinueWith (when antecedent task finishes)
TaskContinuationOptions (OnlyOnRanToCompletion + OnlyOnFaulted)
TaskCreationOptions (AttachedToParent vs DenyChildAttach)
Thread
ThreadStart
ParameterizedThreadStart
Thread.Start + Thread.Abort (shared flag variable)
Thread.Join
ThreadStatic vs ThreadLocal
context (CurrentCulture, Priority, ExecutionContext, IsThreadPoolThread, IsBackground)
ThreadPool (QueueUserWorkItem + WaitCallBack)
Dispatcher.RunAsync
async + await
BlockingCollection (Add, TryAdd + Take, TryTake + CompleteAdding, IsCompleted)
ConcurrentQueue (Enqueue, TryPeek, TryDequeue, Count + IsEmpty)
ConcurrentStack (Push + PushRange, TryPeek, TryPop + TryPopRange, Count + IsEmpty)
ConcurrentBag (Add, TryPeek, TryTake, Count + IsEmpty)
ConcurrentDictionary (GetOrAdd, AddOrUpdate, TryAdd + TryUpdate, TryGetValue, TryRemove)
Enumerable.Range (start, count)
lock
Monitor.Enter, Monitor.TryEnter + Monitor.Exit
Interlocked (Add, Decrement, Increment)
volatile
CancellationToken (CanBeCancelled, IsCancellationRequested, ThrowIfCancellationRequested, WaitHandle)
while
do while
for (initalize(); test(); update())
for (index, length)
foreach
IEnumerable (IEnumerator.GetEnumerator())
break vs continue
if, else, else if
cand (&&)
cor (||)
xor (^)
switch (case, default, goto case)
operators (unary / monadic, binary, ternary)
null conditional operator (.?)
coalesce operator
publish and subscribe vs unsubscribe (+= vs -=)
event
EventHandler
custom event args
delegate (lambda expressions)
closures ()
Funct vs Action vs Predicate delegates
exception (Message, StackTrace, HelpLink, TargetSite, Source)
exception types
try (catch) finally
throw (throw vs throw ex vs throw new)
custom exception
conditional exception (catch + when)
InnerException (throw vs throw ex)
AggregateException (Flatten)

LISTING 2:
Value Type vs Reference Type
Class vs Struct
Immutable (DateTime, String)
enum
Generic Type (T)
Constructor (default, overload, base, this, static)
Member (Field, Property, Method)
Property (indexer: this + identifier, backing fields for custom validation, get + set accessors)
Method (abstract vs virtual + override, base)
Extension Method
Parameter (named, optional)
Boxing vs Unboxing (value is boxed into object vs value is unboxed from object)
Type conversion (implicit vs explicit)
dynamic
access modifiers (members: private vs public vs protected, class: private vs public vs protected)
interface (explicit implementation)
inheritance
IComparable + IComparabe<T> (CompareTo(object|T) => int)
IEnumerable + IEnumerable<T> (GetEnumerator, yield, foreach)
IEnumerator + IEnumerator<T> (Current, MoveNext, Reset)
IDisposable (Dispose, using)
Serializable (NonSerialized)
Conditional (#define)
Attribute (positional vs named, AttributeUsage: AttributeTargets, Attribute.IsDefined, Attribute.GetCustomAttribute)
type (GetType -> Type, GetMembers -> MemberInfo, GetMethod -> MethodInfo + Invoke, IsAssignableFrom, PropertyInfo)
Assembly (GetAssembly(Type), GetEntryAssembly, GetExecutingAssembly, GetCallingAssembly, LoadFrom)
CodeDomProvider + CodeCompileUnit (CodeNamespace, CodeNamespaceImport, CodeTypeDeclaration, CodeMemberField)
Expression (ParameterExpression, BinaryExpression, ExpressionVisitor)
Assembly (FullName, getName, Version, GlobalAssemblyCache, Modules -> Module + GetTypes -> Type + GetMembers)
dynamic vs DynamicObject vs ExpandoObject
BindingFlags
garbage collection (GC: SuppressFinalize)
Finalizer (~)
IDisposable (Dispose)
string (Intern -> reference, Contains, TrimStart, TrimEnd, StartsWith, EndsWith, IndexOf, SubString, Replace, Split, Equals, )
StringBuilder
StringReader + StringWriter
IFormattable (ToString: format, formatProvider)
IFormatProvider (GetFormat: formatType)
interpolation (${,allignment}: + alligned to right, - alligned to left)

LISTING 3:
JsonConvert (SerializeObject, DeserializeObject<T>, JsonReaderException)
XmlSerializer (Serialize, Deserialize)
Regex (IsMatch, Match, Replace)
Regex (^ start search, $ stop search, top level domain, escape \, ?)
	example => https://regex101.com: ^[a-z0-9](\.?[a-z0-9_-]){0,}@[a-z0-9]+\.([a-z]{1,6}\.)?[a-z]{2,6}$
Parse vs TryParse (out)
Convert
Advanced Encryption Standard (Aes: Create, Key, IV, CreateEncryptor + CreateDecryptor -> ICryptoTransform, CryptoStream)
Rivest, Shamir, Adleman (Encrypt + Decrypt -> Bytes, fOAEP: pad with extra bytes, ToXmlString + FromXmlString)
RSACryptoServiceProvider + CspParameters (CspProviderFlags)
RSACryptoServiceProvider + X509Store (X509Certificate2)
checksum
GetHashCode
HashAlgorithm (SHA1Managed, SHA256)
#define + #undef
Conditional
#line nr + #line default
nop (no operation, Debug vs Release)
Debug (WriteLine, Indent, Unindent, WriteLineIf, Assert)
Trace (WriteLine, Indent, Unindent, TraceInformation, TraceWarning, TraceError)
TraceListener
TraceSource + TraceEventType
TraceSwitch (Level: 1 = error, 2 = error and warning, 3 = error, warning and information, 4 = error, warning, information and verbose)
SourceSwitch (Level, Switch, TraceEvent, Flush, config: switches -> value)
Stopwatch (STart, Stop, Pause, Restart)
PerformanceCounter (NextValue, NextSample, Increment, Decrement)
CounterCreationDataCollection (PerformanceCounterCategory, PerformanceCounterType)
EventLog (Source, SourceExists, CreateEventSource, WriteEntry, EntryWritten, EnableRaisingEvents)

LISTING 4:
FileStream (FileMode, FileAccess, Read, Write, ReadAsync, WriteAsync)
StreamReader (ReadToEnd) + StreamWriter
GZipStream (CompressionMode)
File (WriteAllText, AppendAllText, ReadAllText, Exists, Delete, Copy, OpenText, ReadToEnd)
DriveInfo (GetDrives -> DriveInfo[], Name, DriveType, DriveFormat, TotalFreeSpace)
FileInfo (Name, FullName, LastAccessTime, Length, Attributes, IsReadOnly)
Directory (Exists, CreateDirectory, Delete)
DirectoryInfo (Create, Exists, Delete)
Path (GetDirectoryName, GetFileName, GetExtension, ChangeExtension, Combine, GetDirectories, GetFiles)
WebRequest + WebResponse (Create, GetResponse)
WebClient (DownloadStringTaskAsync, DownloadStringAsync, DownloadDataAsync)
HttpClient (GetStringAsync)
SqlConnection (Open, Close)
SqlCommand (ExecuteReader, ExecuteReaderAsync, ExecuteNonQuery, ExecuteScalar, Parameters)
SqlDataReader (Read, ReadAsync)
XmlTextReader (Read)
XmlDocument (LoadXml, XmlElement, Element, Attribute, FirstChild)
ServiceContract + OperationContract
DataContract + DataMember
LINQ (from in where select)
LINQ (projection vs anonymous)
LINQ (join in on equals)
LINQ (group by into)
LINQ (orderby, thenby)
LINQ (Skip + Take)
LINQ (Sum, Min, Max, Average)
LINQ (method based: .Where, .Select)
LINQ (.ToArray, .ToList)
var
XDocument (Parse, XElement, Descendants, Element, Attribute, FirstNode, Add, Remove)
BinaryFormatter (Serialize, Deserialize using Stream)
ISerializable (GetObjectData: SerializationInfo, StreamingContext)
SerializationInfo (GetString, AddValue)
OnSerializing + OnSerialized, OnDeserializing + OnDeserialized attributes
OptionalField
XmlSerializer (Serialize, Deserialize using Stream)
DataContractSerializer (ReadObject, WriteObject using Stream)
array (GetLength, GetUpperBound, Rank)
ArrayList
LinkedList
List (Add, Insert, InsertRange, Remove, RemoveAt, RemoveRange, Clear)
Dictionary (key, value, Add, Remove, ContainsKey, ContainsValue, Keys, Values)
HashSet (Add, IsSubsetOf, Remove, RemoveWhere)
Queue (Enqueue, Dequeue)
Stack (Push, Pop)
ICollection (Count, SyncRoot: object used used to synchronise access, IsSynchronized: whether it is thread safe, CopyTo, GetEnumerator)

MISC:
self-signed certificates (Makecert)
* WeakReference
debug (hit count, condition, filter)
framework tools
	https://docs.microsoft.com/en-us/dotnet/framework/tools
* MulticastDelegate
* PrincipalPermission
* IDataContractSurrogate
* StringCollection (Add, AddRange, Insert, Remove)
* DebuggerDisplay
* expression body definition (=>)
* unsafe
* Mutex
* Lazy
* Flags
* DataProtectionScope vs MemoryProtectionScope
* IEquatable<T> (Equals) vs IComparable<T> (CompareTo)
* IValidateableObject
* GC (AddMemoryPressure, Collect, KeepAlive, SuppressFinalize + ReRegisterForFinalize)
* Access Modifiers
* SafeHandle (wrapper)
* WaitHandle (WaitOne, WaitAny, WaitAll)
* Semaphore vs SemaphoreSlim 
* ReaderWriterLockSlim
* ManualResetEvent vs AutoResetEvent (WaitOne, Set, Reset)